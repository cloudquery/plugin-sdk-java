plugins {
    id 'java-library'
    id "io.freefair.lombok" version "8.2.2"
    id "maven-publish"
    id "com.diffplug.spotless" version "6.20.0"
}

ext {
   javaMainClass = "io.cloudquery.MainClass"
}

group 'io.cloudquery.plugin.sdk'
// x-release-please-start-version
version = '0.0.12'
// x-release-please-end

repositories {
    maven {
        url = uri("https://maven.pkg.github.com/cloudquery/plugin-pb-java")
        credentials {
            username = System.getenv("GITHUB_ACTOR")
            password = System.getenv("GITHUB_TOKEN")
        }
    }
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'org.jooq:joou:0.9.4'
    implementation 'com.google.guava:guava:32.1.3-jre'
    implementation 'info.picocli:picocli:4.7.5'
    implementation 'com.google.guava:guava:32.1.3-jre'
    implementation "io.grpc:grpc-protobuf:1.58.0"
    implementation "io.grpc:grpc-stub:1.57.2"
    implementation "io.grpc:grpc-services:1.57.2"
    implementation "io.grpc:grpc-testing:1.57.2"
    implementation "io.cloudquery:plugin-pb-java:0.0.7"
    implementation "org.apache.arrow:arrow-memory-core:12.0.1"
    implementation "org.apache.arrow:arrow-vector:12.0.1"

    implementation "com.fasterxml.jackson.core:jackson-core:2.15.2"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.15.3"

    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'

    testImplementation(platform('org.junit:junit-bom:5.10.0'))
    testImplementation('org.junit.jupiter:junit-jupiter:5.10.0')
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.10.0')
    testImplementation('org.mockito:mockito-core:5.4.0')
    testImplementation('org.mockito:mockito-junit-jupiter:5.4.0')
    testImplementation('nl.jqno.equalsverifier:equalsverifier:3.15.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.10.0')

    testImplementation 'org.assertj:assertj-core:3.24.2'

    runtimeOnly "org.apache.arrow:arrow-memory-netty:12.0.1"
}

test {
    useJUnitPlatform()
    testLogging {
        events  "skipped", "failed"
    }
    jvmArgs("--add-opens=java.base/java.nio=ALL-UNNAMED")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    withSourcesJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/cloudquery/plugin-sdk-java")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

task runMemDBServe(type: JavaExec) {
    group = "Execution"
    description = "Start the MemDB plugin server"
    classpath = sourceSets.main.runtimeClasspath
    main = javaMainClass
    args = ["serve"]
    jvmArgs = ["--add-opens=java.base/java.nio=ALL-UNNAMED"]
}

spotless {
  java {
    googleJavaFormat()
  }
}
